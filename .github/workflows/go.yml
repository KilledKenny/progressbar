name: Go

on:
  push:
    branches: [ master ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ master ]
    # types: [assigned, opened, synchronize, reopened]

#on: [push, pull_request]

jobs:

  test:
    strategy:
      matrix:
        go-version: [ 1.18.x, 1.19.x ]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ ubuntu-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: |
          # for GOOS in $(go tool dist list|awk -F'/' '{print $1}'|sort -u); do
          #   echo -e "\n\nTESTING FOR $GOOS ...\n"
          #   go test ./...
          # done
          go test ./...

  coverage:
    #needs: test
    env:
      COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x
      - name: Checkout code
        uses: actions/checkout@v2
        #with:
        #  path: ./src/github.com/${{ github.repository }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test & Coverage
        run: go test -v -coverprofile=profile.cov ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  # notifies coveralls that all test jobs are finished
  finish-coverage:
    name: Finish Coverage
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true

  build-assets-and-release:
    strategy:
      matrix:
        go-version: [ 1.19.x ]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ ubuntu-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs: coverage
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build linux binaries
        run: |
          sudo apt-get install -y upx-ucl
          for GOOS in linux; do
          for GOARCH in amd64; do
          for app in multibar multibar_spinner simple spinners steppers tasks; do
            go build -v -ldflags "-s -w" -gcflags=all='-l -B' -trimpath -o ./bin/$app ./examples/$app/...
            upx -5 --brute ./bin/$app
            gzip ./bin/$app
          done
          done
          done
          ls -la --color ./bin/

#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          files: |
#            ./bin/*.gz

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          #body:






